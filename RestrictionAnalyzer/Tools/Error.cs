using System.Collections.Generic;

namespace RestrictionAnalyzer.Tools
{
    public class Error
    {
        public Error(int charNumber, int code)
        {
            CharNumber = charNumber;
            Code = code;
        }

        public int CharNumber { get; }
        public int Code { get; }

        public override string ToString()
        {
            var offset = new string(' ', CharNumber - 2);
            var position = $"^Позиция: {CharNumber}  ";
            var code = $"Код ошибки: {Code}  ";
            var description = $"Описание ошибки: {Errors[Code]}";
            return $"{offset}{position}{code}{description}";
        }

        internal static readonly Dictionary<int, string> Errors = new Dictionary<int, string>
        {
            // лексические ошибки
            [1] = "запрещенный символ",
            [2] = "ошибка в константе: ожидался символ конца строки",
            [3] = "слишком большая константа",

            // синтаксические ошибки
            [100] = "ожидался оператор",
            [101] = "ожидался идентификатор",
            [102] = "ожидалось значение целого типа",
            [103] = "ожидалось значение строкового типа",
            [104] = "ожидался оператор +",
            [105] = "ожидался оператор -",
            [106] = "ожидался оператор (",
            [107] = "ожидался оператор )",
            [108] = "ожидался оператор ,",
            [109] = "ожидался оператор >",
            [110] = "ожидался оператор >=",
            [111] = "ожидался оператор <",
            [112] = "ожидался оператор <=",
            [113] = "ожидался оператор =",
            [114] = "ожидался оператор !=",
            [115] = "ожидался оператор [",
            [116] = "ожидался оператор ]",
            [117] = "ожидался оператор И",
            [118] = "ожидался оператор ->",
            [119] = "ожидался оператор ИЛИ",
            [120] = "ожидался оператор R",
            [121] = "ожидался оператор in",
            [122] = "ожидался оператор not in",
            [123] = "ожидалось выражение",
            [124] = "ожидалось значение или идентификатор",
            [125] = "ожидался оператор сравнения или in или not in",

            // семантические ошибки
            [201] = "идентификатор с таким именем уже объявлен",
            [202] = "идентификатор не объявлен",
            [203] = "ожидался целый тип операндов",
            [204] = "тип элементов списка должен совпадать",
            [205] = "тип выражения и тип элементов списка должен совпадать",
            [206] = "ожидался целый тип операндов",
            [207] = "нельзя сравнивать разные типы",
        };
    }
}